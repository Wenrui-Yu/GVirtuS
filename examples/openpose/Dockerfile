FROM nvidia/cuda:12.6.3-cudnn-devel-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV GVIRTUS_HOME=/opt/GVirtuS
ENV OPENPOSE_HOME=/opt/openpose
ENV LD_LIBRARY_PATH=${GVIRTUS_HOME}/lib:${GVIRTUS_HOME}/lib/frontend:${LD_LIBRARY_PATH}


# Prevent tzdata prompt and install dependencies
RUN ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    echo "Etc/UTC" > /etc/timezone && \
    apt-get update && apt-get install -y tzdata && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    wget \
    curl \
    unzip \
    pkg-config \
    libprotobuf-dev \
    protobuf-compiler \
    libgoogle-glog-dev \
    libgflags-dev \
    libatlas-base-dev \
    libboost-all-dev \
    libhdf5-dev \
    libleveldb-dev \
    libsnappy-dev \
    libopencv-dev \
    libopenblas-dev \
    liblmdb-dev \
    python3-dev \
    python3-pip \
    python3-setuptools \
    libxmu-dev \
    libxi-dev \
    libgl-dev \
    libosmesa-dev \
    liblog4cplus-dev \
    librdmacm-dev \
    libibverbs-dev \
    libgtest-dev \
    liblz4-dev \
    cmake \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install opencv-python

# Clone and build GVirtuS
WORKDIR /opt
RUN git clone -b dev https://github.com/ecn-aau/GVirtuS.git && \
    cd GVirtuS && mkdir build && cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=${GVIRTUS_HOME} .. && \
    make -j$(nproc) && make install

# Clone and build OpenPose
WORKDIR /opt
RUN git clone --depth=1 https://github.com/CMU-Perceptual-Computing-Lab/openpose.git

# Copy custom Cuda.cmake
COPY cmake/Cuda.cmake ${OPENPOSE_HOME}/cmake/Cuda.cmake

# Copy patched Caffe (after OpenPose clone)
COPY caffe/ ${OPENPOSE_HOME}/3rdparty/caffe/

# Optional: Copy models directory if needed
# COPY models/ ${OPENPOSE_HOME}/models/

WORKDIR ${OPENPOSE_HOME}/build
RUN cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_CAFFE=ON \
    -DBUILD_EXAMPLES=ON \
    -DBUILD_DOCS=OFF \
    -DCUDA_USE_STATIC_CUDA_RUNTIME=OFF \
    -D BUILD_TESTS=OFF \
    -D CUDA_USE_STATIC_CUDA_RUNTIME=OFF \
    -D CUDA_INCLUDE_DIRS="${GVIRTUS_HOME}/include;/usr/local/cuda-12.6/include" \
    -D CMAKE_CXX_FLAGS="-L${GVIRTUS_HOME}/lib -L${GVIRTUS_HOME}/lib/frontend" ..&& \
    make -j$(nproc)
